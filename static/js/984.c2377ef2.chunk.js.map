{"version":3,"file":"static/js/984.c2377ef2.chunk.js","mappings":"yQAgGA,UAhFuB,WACpB,OAA4BA,EAAAA,EAAAA,YAAWC,EAAAA,GAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UACd,GAAeC,EAAAA,EAAAA,IAAaF,GAArBG,GAAP,eACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAMC,EAAAA,EAAAA,KAAND,EAER,GAA4BE,EAAAA,EAAAA,KACzBC,EAAAA,EAAAA,IAAWT,EAAW,aADzB,eAAOU,EAAP,KA0BA,OA1BA,MA2BU,SAAC,IAAD,KAKP,SAAC,IAAD,WACG,UAAC,KAAD,CAAMC,WAAS,EACZC,eAAgB,SAChBC,MAAO,CAAEC,OAAQC,OAAOC,YAAc,GAAIC,OAAQ,KAFrD,WAGG,gBAAKJ,MAAO,CAAEK,MAAO,MAAOJ,OAAQ,OAAQK,OAAQ,iBAAkBC,UAAW,OAAQC,UAAW,MAAOC,UAAW,QAAtH,SACIZ,EAASa,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,UAAYD,EAAEC,SAA1B,IAAqCC,KAAI,SAACC,GAAD,OACrD,iBAAKf,MAAO,CACTI,OAAQ,GACRE,OAAQS,EAAQC,MAAQ3B,EAAK2B,IAAM,kBAAoB,iBACvDC,WAAYF,EAAQC,MAAQ3B,EAAK2B,IAAM,OAAS,OAChDX,MAAO,cACPa,SAAU,MACVC,QAAS,GANZ,WASG,UAAC,KAAD,CAAMrB,WAAS,EAAf,WACG,SAAC,IAAD,CAAQE,MAAO,CACZoB,YAAa,GACbC,IAAKN,EAAQO,YAChB,yBAAMP,EAAQQ,kBAEjB,gBAAKC,UAAU,UAAf,SAA0BT,EAAQU,SAhBgB,OAoB3D,UAAC,KAAD,CAAM3B,WAAS,EACZ4B,UAAW,SACXC,WAAY,WACZ3B,MAAO,CAAEK,MAAO,OAHnB,WAKG,SAAC,IAAD,CACGd,MAAOA,EACPqC,SAAU,SAAAC,GAAC,OAAIrC,EAASqC,EAAEC,OAAOvC,MAAtB,EACXwC,WAAS,EACTC,QAAS,cACZ,SAAC,IAAD,CAAQC,QA9DA,WACjB,IACO1C,IACD2C,EAAAA,EAAAA,KAAOtC,EAAAA,EAAAA,IAAWT,EAAW,YAC1B,CACG6B,IAAK3B,EAAK2B,IACVO,YAAalC,EAAKkC,YAClBD,SAAUjC,EAAKiC,SACfG,KAAMlC,EACNsB,WAAWsB,EAAAA,EAAAA,QAEjB3C,EAAS,KAET4C,MAAM,6EAKX,CAHC,MAAOP,GACNQ,QAAQC,IAAIT,GACZO,MAAM,8FACR,CACH,EA2CyCJ,QAAS,WAAvC,SAAoDvC,EAAE,iBAKpE,C","sources":["pages/Chat/Chat.tsx"],"sourcesContent":["import { Avatar, Button, Grid, TextField } from '@mui/material'\r\nimport { Container } from '@mui/system'\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { useContext, useState } from 'react'\r\nimport { useAuthState } from 'react-firebase-hooks/auth'\r\nimport { Context } from '../../App'\r\nimport { collection, addDoc, serverTimestamp, query } from 'firebase/firestore';\r\n\r\nimport Loader from '../../components/Loader';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\n\r\n\r\n\r\nconst Chat: React.FC = () => {\r\n   const { auth, firestore } = useContext(Context)\r\n   const [user] = useAuthState(auth)\r\n   const [value, setValue] = useState('')\r\n   const { t } = useTranslation()\r\n\r\n   const [messages, loading] = useCollectionData(\r\n      collection(firestore, 'messages')\r\n   )\r\n\r\n\r\n   const sendMessage = () => {\r\n      try {\r\n         if (value) {\r\n            addDoc(collection(firestore, 'messages'),\r\n               {\r\n                  uid: user.uid,\r\n                  displayName: user.displayName,\r\n                  photoURL: user.photoURL,\r\n                  text: value,\r\n                  createdAt: serverTimestamp()\r\n               })\r\n            setValue('')\r\n         } else {\r\n            alert('Введите текст.')\r\n         }\r\n      } catch (e) {\r\n         console.log(e)\r\n         alert('Произошла ошибка')\r\n      }\r\n   }\r\n\r\n   if (loading) {\r\n      return <Loader />\r\n   }\r\n\r\n\r\n   return (\r\n      <Container>\r\n         <Grid container\r\n            justifyContent={'center'}\r\n            style={{ height: window.innerHeight - 50, margin: '0' }}>\r\n            <div style={{ width: '80%', height: '60vh', border: '1px solid gray', overflowY: 'auto', marginTop: '5px', overflowX: 'clip' }}>\r\n               {messages.sort((a, b) => a.createdAt - b.createdAt).map((message) =>\r\n                  <div style={{\r\n                     margin: 10,\r\n                     border: message.uid === user.uid ? '2px solid green' : '2px dashed red',\r\n                     marginLeft: message.uid === user.uid ? 'auto' : '10px',\r\n                     width: 'fit-content',\r\n                     maxWidth: '80%',\r\n                     padding: 5\r\n                  }}\r\n                  >\r\n                     <Grid container>\r\n                        <Avatar style={{\r\n                           marginRight: 5\r\n                        }} src={message.photoURL} />\r\n                        <div>{message.displayName}</div>\r\n                     </Grid>\r\n                     <div className='message'>{message.text}</div>\r\n                  </div>\r\n               )}\r\n            </div>\r\n            <Grid container\r\n               direction={'column'}\r\n               alignItems={'flex-end'}\r\n               style={{ width: '80%' }}\r\n            >\r\n               <TextField\r\n                  value={value}\r\n                  onChange={e => setValue(e.target.value)}\r\n                  fullWidth\r\n                  variant={'outlined'} />\r\n               <Button onClick={sendMessage} variant={'outlined'}>{t('send')}</Button>\r\n            </Grid>\r\n         </Grid>\r\n      </Container>\r\n   )\r\n}\r\n\r\nexport default Chat"],"names":["useContext","Context","auth","firestore","useAuthState","user","useState","value","setValue","t","useTranslation","useCollectionData","collection","messages","container","justifyContent","style","height","window","innerHeight","margin","width","border","overflowY","marginTop","overflowX","sort","a","b","createdAt","map","message","uid","marginLeft","maxWidth","padding","marginRight","src","photoURL","displayName","className","text","direction","alignItems","onChange","e","target","fullWidth","variant","onClick","addDoc","serverTimestamp","alert","console","log"],"sourceRoot":""}